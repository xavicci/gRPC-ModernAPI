// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: grpc-fibonacci/proto/fibonacci.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FibonacciRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        int32                  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FibonacciRequest) Reset() {
	*x = FibonacciRequest{}
	mi := &file_grpc_fibonacci_proto_fibonacci_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FibonacciRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FibonacciRequest) ProtoMessage() {}

func (x *FibonacciRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_fibonacci_proto_fibonacci_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FibonacciRequest.ProtoReflect.Descriptor instead.
func (*FibonacciRequest) Descriptor() ([]byte, []int) {
	return file_grpc_fibonacci_proto_fibonacci_proto_rawDescGZIP(), []int{0}
}

func (x *FibonacciRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type SyncFibonacciResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TimeTaken        string                 `protobuf:"bytes,1,opt,name=timeTaken,proto3" json:"timeTaken,omitempty"`
	FibonacciNumbers []int32                `protobuf:"varint,2,rep,packed,name=fibonacciNumbers,proto3" json:"fibonacciNumbers,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SyncFibonacciResponse) Reset() {
	*x = SyncFibonacciResponse{}
	mi := &file_grpc_fibonacci_proto_fibonacci_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncFibonacciResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncFibonacciResponse) ProtoMessage() {}

func (x *SyncFibonacciResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_fibonacci_proto_fibonacci_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncFibonacciResponse.ProtoReflect.Descriptor instead.
func (*SyncFibonacciResponse) Descriptor() ([]byte, []int) {
	return file_grpc_fibonacci_proto_fibonacci_proto_rawDescGZIP(), []int{1}
}

func (x *SyncFibonacciResponse) GetTimeTaken() string {
	if x != nil {
		return x.TimeTaken
	}
	return ""
}

func (x *SyncFibonacciResponse) GetFibonacciNumbers() []int32 {
	if x != nil {
		return x.FibonacciNumbers
	}
	return nil
}

type AsyncFibonacciResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Sequence        int32                  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	FibonacciNumber int32                  `protobuf:"varint,2,opt,name=fibonacciNumber,proto3" json:"fibonacciNumber,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AsyncFibonacciResponse) Reset() {
	*x = AsyncFibonacciResponse{}
	mi := &file_grpc_fibonacci_proto_fibonacci_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AsyncFibonacciResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncFibonacciResponse) ProtoMessage() {}

func (x *AsyncFibonacciResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_fibonacci_proto_fibonacci_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncFibonacciResponse.ProtoReflect.Descriptor instead.
func (*AsyncFibonacciResponse) Descriptor() ([]byte, []int) {
	return file_grpc_fibonacci_proto_fibonacci_proto_rawDescGZIP(), []int{2}
}

func (x *AsyncFibonacciResponse) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *AsyncFibonacciResponse) GetFibonacciNumber() int32 {
	if x != nil {
		return x.FibonacciNumber
	}
	return 0
}

var File_grpc_fibonacci_proto_fibonacci_proto protoreflect.FileDescriptor

const file_grpc_fibonacci_proto_fibonacci_proto_rawDesc = "" +
	"\n" +
	"$grpc-fibonacci/proto/fibonacci.proto\x12\x05proto\"*\n" +
	"\x10FibonacciRequest\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x05R\x06number\"a\n" +
	"\x15SyncFibonacciResponse\x12\x1c\n" +
	"\ttimeTaken\x18\x01 \x01(\tR\ttimeTaken\x12*\n" +
	"\x10fibonacciNumbers\x18\x02 \x03(\x05R\x10fibonacciNumbers\"^\n" +
	"\x16AsyncFibonacciResponse\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x05R\bsequence\x12(\n" +
	"\x0ffibonacciNumber\x18\x02 \x01(\x05R\x0ffibonacciNumber2\xaa\x01\n" +
	"\x10FibonacciService\x12H\n" +
	"\rSyncFibonacci\x12\x17.proto.FibonacciRequest\x1a\x1c.proto.SyncFibonacciResponse\"\x00\x12L\n" +
	"\x0eAsyncFibonacci\x12\x17.proto.FibonacciRequest\x1a\x1d.proto.AsyncFibonacciResponse\"\x000\x01B\tZ\a./protob\x06proto3"

var (
	file_grpc_fibonacci_proto_fibonacci_proto_rawDescOnce sync.Once
	file_grpc_fibonacci_proto_fibonacci_proto_rawDescData []byte
)

func file_grpc_fibonacci_proto_fibonacci_proto_rawDescGZIP() []byte {
	file_grpc_fibonacci_proto_fibonacci_proto_rawDescOnce.Do(func() {
		file_grpc_fibonacci_proto_fibonacci_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_fibonacci_proto_fibonacci_proto_rawDesc), len(file_grpc_fibonacci_proto_fibonacci_proto_rawDesc)))
	})
	return file_grpc_fibonacci_proto_fibonacci_proto_rawDescData
}

var file_grpc_fibonacci_proto_fibonacci_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_grpc_fibonacci_proto_fibonacci_proto_goTypes = []any{
	(*FibonacciRequest)(nil),       // 0: proto.FibonacciRequest
	(*SyncFibonacciResponse)(nil),  // 1: proto.SyncFibonacciResponse
	(*AsyncFibonacciResponse)(nil), // 2: proto.AsyncFibonacciResponse
}
var file_grpc_fibonacci_proto_fibonacci_proto_depIdxs = []int32{
	0, // 0: proto.FibonacciService.SyncFibonacci:input_type -> proto.FibonacciRequest
	0, // 1: proto.FibonacciService.AsyncFibonacci:input_type -> proto.FibonacciRequest
	1, // 2: proto.FibonacciService.SyncFibonacci:output_type -> proto.SyncFibonacciResponse
	2, // 3: proto.FibonacciService.AsyncFibonacci:output_type -> proto.AsyncFibonacciResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_fibonacci_proto_fibonacci_proto_init() }
func file_grpc_fibonacci_proto_fibonacci_proto_init() {
	if File_grpc_fibonacci_proto_fibonacci_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_fibonacci_proto_fibonacci_proto_rawDesc), len(file_grpc_fibonacci_proto_fibonacci_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_fibonacci_proto_fibonacci_proto_goTypes,
		DependencyIndexes: file_grpc_fibonacci_proto_fibonacci_proto_depIdxs,
		MessageInfos:      file_grpc_fibonacci_proto_fibonacci_proto_msgTypes,
	}.Build()
	File_grpc_fibonacci_proto_fibonacci_proto = out.File
	file_grpc_fibonacci_proto_fibonacci_proto_goTypes = nil
	file_grpc_fibonacci_proto_fibonacci_proto_depIdxs = nil
}
